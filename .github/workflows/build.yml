name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-windows:
    # Para proyectos .NET Framework clásicos, este runner es más estable
    runs-on: windows-2019

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      # Detecta automáticamente tu solución bajo src/
      - name: Detect solution under src/
        id: find_sln
        shell: pwsh
        run: |
          $sln = Get-ChildItem -Path "src" -Filter *.sln -Recurse | Select-Object -First 1
          if (-not $sln) { Write-Error "No se encontró ninguna .sln bajo 'src/'"; exit 1 }
          echo "SLN_PATH=$($sln.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          Write-Host "Solución detectada: $($sln.FullName)"

      # Crea un App.config temporal si falta, junto a cada .csproj (NO se sube al repo)
      - name: Create temporary App.config if missing
        shell: pwsh
        run: |
          $csprojs = Get-ChildItem -Path "src" -Filter *.csproj -Recurse
          foreach ($p in $csprojs) {
            $projDir = Split-Path $p.FullName
            $appConfig = Join-Path $projDir "App.config"
            if (-not (Test-Path $appConfig)) {
              Write-Host ">> Creando App.config temporal en $projDir"
              @"
<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
  </startup>
  <appSettings>
    <add key="ActiveDb" value="Docker"/>
    <add key="AppTitulo" value="SuiteMDI-Educativa-SQLServer"/>
  </appSettings>
  <connectionStrings>
    <add name="SqlDocker"
         connectionString="Server=127.0.0.1,2333;Database=master;User ID=sa;Password=DummyPassword!;TrustServerCertificate=True;MultipleActiveResultSets=True;"
         providerName="System.Data.SqlClient" />
  </connectionStrings>
</configuration>
"@ | Out-File -FilePath $appConfig -Encoding UTF8
            }
          }

      - name: Restore packages
        shell: pwsh
        run: nuget restore "${{ steps.find_sln.outputs.SLN_PATH }}"

      - name: Build (Release)
        shell: pwsh
        run: msbuild "${{ steps.find_sln.outputs.SLN_PATH }}" /t:Build /p:Configuration=Release /m /verbosity:minimal